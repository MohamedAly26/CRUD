@page "/"
@using System.Globalization
@using Microsoft.EntityFrameworkCore
@using CRUD.Models
@using Microsoft.AspNetCore.Components
@inject CRUD.Data.AppDbContext Db
@inject NavigationManager Nav
@rendermode InteractiveServer

<h1>Welcome</h1>

<div class="toolbar">
    <input class="search" placeholder="Cerca prodotti…" @bind="Search" />
    <button class="manage" @onclick="GoToManage">Gestisci prodotti</button>
</div>

@if (products is null)
{
    <p>Caricamento…</p>
}
else if (!FilteredProducts.Any())
{
    <p>Nessun prodotto trovato.</p>
}
else
{
    <div class="cards">
        @foreach (var p in FilteredProducts)
        {
            <div class="card">
                <img src="@(string.IsNullOrEmpty(p.ImageUrl) ? "/images/placeholder.png" : p.ImageUrl)" alt="@p.Name" />
                <div class="title" title="@p.Name">@p.Name</div>
                <div class="price">@p.Price.ToString("C", CultureInfo.CurrentCulture)</div>
                <button class="view" @onclick="() => GoToEdit(p.Id)">Vedi / Modifica</button>
            </div>
        }
    </div>
}

@code {
    private List<Product>? products;
    private string Search = "";

    protected override async Task OnInitializedAsync()
    {
        products = await Db.Products.AsNoTracking()
                                    .OrderBy(p => p.Name)
                                    .ToListAsync();
    }

    private IEnumerable<Product> FilteredProducts =>
        string.IsNullOrWhiteSpace(Search)
            ? products ?? Enumerable.Empty<Product>()
            : products!.Where(p => p.Name.Contains(Search, StringComparison.OrdinalIgnoreCase));

    // ✅ niente virgolette annidate negli attributi
    private void GoToManage() => Nav.NavigateTo("/products");
    private void GoToEdit(int id) => Nav.NavigateTo($"/products?editId={id}");



}
